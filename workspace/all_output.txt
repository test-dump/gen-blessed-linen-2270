program.cs
```csharp
using System;

namespace HelloWorld
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello, World!");
        }
    }
}
```

programtests.cs
```csharp
using System;
using System.IO;
using HelloWorld;
using Xunit;

namespace HelloWorldTests
{
    public class ProgramTests
    {
        [Fact]
        public void Main_WritesHelloWorldToConsole()
        {
            var stringWriter = new StringWriter();
            Console.SetOut(stringWriter);
            Program.Main(new string[] {});

            var result = stringWriter.ToString().Trim();

            Assert.Equal("Hello, World!", result);
        }
    }
}
```

This C# "Hello, World!" program is a very basic introductory example to C# programming. It contains a single file with a "Program" class, and a "Main" method. The "Main" method outputs the string "Hello, World!" to the console.

This program also includes a testing class "ProgramTests". In this class, a single test method "Main_WritesHelloWorldToConsole" is defined. This test is marked with the "Fact" attribute indicating that it is a unittest. This test redirects the standard console output to a string (using a StringWriter), then calls the "Main" method, and asserts that the output is equal to "Hello, World!".

The required dependencies for this program are:
- System: This namespace provides the "Console" class and "WriteLine" method to print text to the console.
- Xunit: This is a testing framework for .Net applications. It provides attributes like "Fact" to denote test methods, and "Assert" class to check conditions.

Make sure Xunit and .Net Core are installed in your environment to run this program and its tests. The Xunit package can be installed using a package manager (like NuGet) or manually within the project using the dotnet CLI command 'dotnet add package xunit'. .Net Core SDK can be downloaded from the official .Net website.